from collections import deque
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def kthLargestLevelSum(self, root: Optional[TreeNode], k: int) -> int:
        queue = deque([root])
        ans = []
        s = 0
        while queue:
            length = len(queue)
            while length > 0:
                temp = queue.popleft()
                s += temp.val
                if temp.left:
                    queue.append(temp.left)
                if temp.right:
                    queue.append(temp.right)
                length -= 1
            ans.append(s)
            s = 0
        if len(ans) < k:
            return -1
        ans.sort()
        ans = ans[::-1]
        return ans[k-1]
            
