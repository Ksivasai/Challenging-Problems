# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        def getlcabt(root,p,q):
            if root == None:
                return None
            if(root == p or root == q):
                return root
            left = getlcabt(root.left,p,q)
            right = getlcabt(root.right,p,q)
            if(left!=None and right!=None):
                return root
            if(left == None):
                return right
            if(right == None):
                return left
        return getlcabt(root,p,q)
        
