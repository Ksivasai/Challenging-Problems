class node:
    def __init__(self):
        self.count = 0
        self.child = [None]*26
def insert(root,string):
    for i in string:
        if root.child[ord(i) - ord('a')] == None:
            root.child[ord(i) - ord('a')] = node()
        root = root.child[ord(i) - ord('a')]
        root.count = root.count + 1
    
def getcount(root,word):
    count = 0
    for i in word:
        if root.child[ord(i) - 97] != None:
            root = root.child[ord(i) - ord('a')]
            count += root.count
        else:
            return count
    return count


class Solution:
    def sumPrefixScores(self, words: List[str]) -> List[int]:
        root = node()
        for i in words:
            insert(root,i)
        ans = []
        for i in words:
            ans.append(getcount(root,i))
        return ans

        
        
