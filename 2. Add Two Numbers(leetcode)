/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode h1=l1;
        ListNode h2=l2;
        int c=0;
        ListNode dummy=new ListNode(0);
        ListNode temp=dummy;
        while(h1!=null && h2!=null){
            int k=h1.val+h2.val+c;
            if(k>=10){
            temp.next=new ListNode(k%10);
            c=1;
            }
            else{
                temp.next=new ListNode(k);
                c=0;
            }
            h1=h1.next;
            h2=h2.next;
            temp=temp.next;

        }
        while(h1!=null){
            int k=h1.val+c;
            if(k>=10){
            temp.next=new ListNode(k%10);
            c=1;
            }
            else{
                temp.next=new ListNode(k);
                c=0;
            }
            h1=h1.next;
            temp=temp.next;
        }
        while(h2!=null){
             int k=h2.val+c;
            if(k>=10){
            temp.next=new ListNode(0);
            c=1;
            }
            else{
                temp.next=new ListNode(k);
                c=0;
            }
            h2=h2.next;
            temp=temp.next;

        }
        if(c==1){
            temp.next=new ListNode(1);
        }
        return dummy.next;

    }
}
