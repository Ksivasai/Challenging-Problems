class Solution {
    public int search(int[] a, int target) {
        int n=a.length;
        if(n==1){
            if(target==a[0])
                return 0;
            else return -1;
        }
        if(n==2){
            if(target == a[0]) return 0;
            else if(target == a[1]) return 1;
            else return -1;
        }
        int low=0;
        int high=n-1;
        int ans=0;
        int c=0;
        while(low <= high){
            int mid=(low+high)/2;
            if(a[0]<=a[mid]){
                low=mid+1;
                ans=mid;
                c=1;
            }
            else{
                high=mid-1;
            }
        }

        if(low == n){
            ans = -1;
        }
        if(target <= a[n-1]){
            low=ans+1;
            high=n-1;
        } 
        else{
            low=0;
            high=ans;
        }
        while(low <= high){
            int mid=(low+high)/2;
            if(a[mid]==target){
                return mid;
            }
            else if(a[mid]>target){
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return -1;
    }
}
